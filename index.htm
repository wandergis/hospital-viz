<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>一份网络数据的分布可视化</title>
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <link href="//cdn.bootcss.com/leaflet/0.7.7/leaflet.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="css/typeahead.css">
    <style type="text/css">
    * {
        margin: 0;
        padding: 0;
        box-sizing:border-box;
    }
    
    body,
    html {
        height: 100%;
    }
    
    body {
        font-family: 'Microsoft YaHei';
        -webkit-font-smoothing: subpixel-antialiased;
        line-height: 1.2em !important;
        background-color: #FFFFFF;
    }
    
    .title {
        text-align: center;
        color: #00FDF8;
        font-size: 24px;
        line-height: 50px;
        background: #304A65;
    }
    
    #map {
        position: absolute;
        top: 50px;
        bottom: 0;
        width: 100%;
    }
    
    .label,
    .label-all {
        font-weight: 700;
        text-transform: uppercase;
        text-align: center;
        margin-top: -1em;
    }
    
    .label-all div {
        position: relative;
        width: 200px;
        top: 15px;
        overflow: visible;
        left: -50%;
        color: #008EFD;
        /*text-shadow: 0px 0px 1px rgba(255, 255, 255, 0.9);*/
        pointer-events: none;
    }
    
    .label div {
        position: relative;
        width: 400px;
        top: 15px;
        overflow: visible;
        left: -50%;
        color: #de06ff;
        font-family: 'Microsoft YaHei';
        font-size: 16px;
        /*text-shadow: 0px 0px 1px rgba(255, 255, 255, 0.9);*/
        pointer-events: none;
    }
    
    canvas.leaflet-heatmap-layer {
        pointer-events: none;
    }
    
    .func {
        position: absolute;
        top: 51px;
        left: 40px;
        width: 160px;
        z-index: 9999;
    }
    
    .tips {
        display: block;
        padding: 4px;
        width: 100%;
        text-align: center;
        color: #fff;
        border: none;
        background: #13C38A;
        font-size: 14px;
        border-radius: 4px;
        /*opacity: 0.7;*/
        margin: 4px;
    }
    </style>
</head>

<body>
    <div class="title">一份网络数据的分布可视化<span style="font-size: 12px;">&nbsp;数据来源于网络</span> </div>
    <div id="map"></div>
    <div class="func">
        <button class="tips" id='mylocation'>点击查附近</button>
        <input class="typeahead" type="text" placeholder="请输入名称">
    </div>
    <a href="https://github.com/wandergis/hospital-viz"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/52760788cde945287fbb584134c4cbc2bc36f904/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f77686974655f6666666666662e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_white_ffffff.png"></a>
    <script src="//cdn.bootcss.com/leaflet/0.7.7/leaflet.js"></script>
    <script src="leaflet-heat.js"></script>
    <script src="//cdn.bootcss.com/jquery/2.1.3/jquery.min.js"></script>
    <script src="//cdn.bootcss.com/typeahead.js/0.11.1/typeahead.bundle.min.js"></script>
    <script type="text/javascript">
    var map = L.map('map', {
        tapTolerance: 25
    }).setView(L.latLng(38.993572058209466, 106.435546875), 4);
    var baseLayers = {
        "电子地图": L.tileLayer('//webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}', {
            subdomains: "1234",
            attribution: '高德地图'
        }),
        "卫星地图": L.tileLayer('//www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}', {
            attribution: 'Google Map'
        }),
        '深色底图': L.tileLayer('//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}', {
            attribution: 'geoq'
        }).addTo(map)
    };
    var layerControl = L.control.layers(baseLayers, {}, {
        position: 'topleft',
        collapsed: true
    }).addTo(map);
    var highlight = {}; //高亮符号
    var lastLayer; //最后点击
    var hospitalLayer;
    var labelgroup = new L.LayerGroup();
    $.getJSON('./hospital.geojson', function(data) {
        hospitalLayer = L.geoJson(data, {
            pointToLayer: function(feature, latlng) {
                var marker = L.circleMarker(latlng, {
                    radius: 5,
                    color: '#fff',
                    fill: true,
                    weight: 2,
                    opacity: 1,
                    fillColor: '#ff1c2a',
                    fillOpacity: 1
                });
                var label = L.marker(latlng, {
                    icon: L.divIcon({
                        iconSize: null,
                        className: 'label',
                        html: '<div>' + feature.properties.name + '</div>'
                    })
                });
                marker.on('click', function(e) {
                    if (map.hasLayer(lastLayer)) {
                        map.removeLayer(lastLayer);
                    }
                    lastLayer = label;
                    lastLayer.addTo(map);
                });
                marker.on('mouseover', function(e) {
                    e.target.setRadius(10);
                    lastLayer = label;
                    lastLayer.addTo(map);
                });
                marker.on('mouseout', function(e) {
                    e.target.setRadius(5);
                    if (map.hasLayer(lastLayer)) {
                        map.removeLayer(lastLayer);
                    }
                });
                labelgroup.addLayer(L.marker(latlng, {
                    icon: L.divIcon({
                        iconSize: null,
                        className: 'label-all',
                        html: '<div>' + feature.properties.name + '</div>'
                    })
                }));
                return marker;
            }
        }).addTo(map);
        var heatpoints = data.features.map(function(value) {
            var point = value.geometry.coordinates.reverse();
            point.push(1);
            return point;
        });
        var heat = L.heatLayer(heatpoints, {
            radius: 15,
            blur: 15,
            minOpacity: 0.5
        }).addTo(map);
        hospitalLayer.bringToFront();
        layerControl.addOverlay(hospitalLayer, '分布点');
        layerControl.addOverlay(heat, '分布热力图');
        layerControl.addOverlay(labelgroup, '标注');
        map.on('click', function(e) {
            if (map.hasLayer(lastLayer)) {
                map.removeLayer(lastLayer);
            }
        })
        map.on('zoomend', function(e) {
            if (map.getZoom() > 7) {
                if (!map.hasLayer(labelgroup)) {
                    map.addLayer(labelgroup);
                }
            } else {
                if (map.hasLayer(labelgroup)) {
                    map.removeLayer(labelgroup);
                }
            }
        });
        initQuery();
    });
    $("#mylocation").on("click", function() {
        $("#mylocation").text("正在定位中")
        map.locate({
            setView: true,
            maxZoom: 11
        });
    })
    map.on('locationfound', function() {
        $("#mylocation").text("查看我的附近")
    });
    map.on('locationerror', function() {
        $("#mylocation").text("查看我的附近")
        alert("抱歉，定位失败")
    });
    // 定位功能使用 leaflet 自带的方法来替换了下面调用原生 API的方式，但是在某些PC下 会返回错误的经纬度
    // $("#mylocation").on("click", function() {
    //     $("#mylocation").text("正在定位中")
    //     getCurrentPosition(function(lat, lon) {
    //         var latlng = L.latLng(lat, lon);
    //         map.setView(latlng, 11);
    //         $("#mylocation").text("查看我的附近")
    //     }, function() {
    //         alert("抱歉，该功能无法使用")
    //         $("#mylocation").text("查看我的附近")
    //     })
    //     })
    // function getCurrentPosition(callback, error) {
    //     if ("geolocation" in navigator) {
    //         navigator.geolocation.getCurrentPosition(function(position) {
    //             var coords = position.coords;
    //             var lat = coords.latitude;
    //             var lon = coords.longitude;
    //             callback && callback(lat, lon);
    //         });
    //     } else {
    //         // 不支持地理位置api
    //         error && error()
    //     }
    // }
    //感谢@brandonxiang添加搜索功能
    function initQuery() {
        var engine = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.whitespace,
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            local: function() {
                var names = [];
                hospitalLayer.eachLayer(function(l) {
                    names.push(l.feature.properties.name);
                });
                return names;
            }
        });
        engine.initialize();
        $('.typeahead').typeahead({
            highlight: true
        }, {
            source: engine
        });
        $('.typeahead').click(function(){
            $(this).val('');
        })
        $('.typeahead').bind('typeahead:select', function(ev, suggestion) {
            hospitalLayer.eachLayer(function(l) {
                if (l.feature.properties.name === suggestion) {
                    map.fitBounds(l, {
                        maxZoom: 16
                    });
                }
            });
        });
    }
    </script>
</body>

</html>